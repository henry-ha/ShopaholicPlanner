@model ShopaholicPlanner.Models.ShoppingBasketCollectionModel
@{
    ViewBag.Title = "Home Page";
}

<script language="JavaScript" type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script>

<form>
    <div class="jumbotron">
        <h1>Shopaholic Planner.</h1>
        <p class="lead">Start by building your shopping list below. You can add whatever items you like!</p>
        <p><a href="http://asp.net" class="btn btn-primary btn-lg">Save</a></p>
    </div>

    <div class="row">
        @if (Model.ShoppingBasketItems.Count == 0)
        {
            <h5>There are no items in your shopping basket :( - Add items now!</h5>
        }
            <table id="basketList">

                @for (int i = 0; i < Model.ShoppingBasketItems.Count; i++)
                {
                    <tr class="sp-items">         
                        <td>
                            @Html.EditorFor(x => x.ShoppingBasketItems[i].Name, new { placeholder = "Product name" })
                            @Html.ValidationMessageFor(model => model.ShoppingBasketItems[i].Name)
                        </td>

                        <td>
                            @Html.EditorFor(x => x.ShoppingBasketItems[i].Description, new { placeholder = "Description" })
                        </td>
                        <td>
                            @Html.EditorFor(x => x.ShoppingBasketItems[i].Quantity, new { placeholder = "Quantity", type = "number", min = 1, @class = "priceQuantity" })
                            @Html.ValidationMessageFor(model => model.ShoppingBasketItems[i].Quantity)
                        </td>
                        <td>
                            @Html.EditorFor(x => x.ShoppingBasketItems[i].Currency, new { placeholder = "Currency", maxlength = "1", @class = "priceCurrency" })
                            @Html.ValidationMessageFor(model => model.ShoppingBasketItems[i].Currency)
                        </td>
                        <td>
                            @Html.EditorFor(x => x.ShoppingBasketItems[i].Price, new { placeholder = "Price", @class = "priceAdd", onkeypress = "return isNumberKey(event);" })
                            @Html.ValidationMessageFor(model => model.ShoppingBasketItems[i].Price)
                        </td>
                        <td>
                            @Html.EditorFor(x => x.ShoppingBasketItems[i].Url, new { placeholder = "Url" })
                        </td>
                        <td><a class="btn btn-default removeItem" href="#">Remove</a></td>
                    </tr>
                }                
            </table>

        <p><a id="addAnother" class="btn btn-default" href="#">Add</a></p>

        <div class="row col-md-12 text-right">
            <label id="total">Total: £0.00</label>
        </div>
        
    </div>
</form>

<script>
    $(function () {
        //page load
        recalculateTotal();
    });

    $(document).on('change', 'form .priceAdd, form .priceQuantity, form .priceCurrency', function () {
        recalculateTotal();
    });

    $(document).on('click', 'form .removeItem', function () {
        $(this).parent().parent().remove();
        recalculateTotal();
    });

    function recalculateTotal() {
        var totalValue = 0;
        $("form .sp-items").each(function () {
            
            //work out quantity
            var quantity = 1;
            var quantityObj = $(this).find(".priceQuantity")[0];

            if (quantityObj !== null) {
                if (parseInt(quantityObj.value)) {
                    quantity = quantityObj.value;
                }
            }

            //work out cost
            var productCost = 0;
            var priceObj = $(this).find(".priceAdd")[0];
            if (priceObj !== null) {
                if (parseInt(priceObj.value)) {
                    productCost = priceObj.value;
                }
            }

            totalValue = totalValue + (Number(productCost) * quantity);

        });
 

        var currency = "£";
        $("form #Currency").each(function () {
            if ($(this)[0].value != "") {
                currency = $(this)[0].value;
                return false;
            };
        });

        $("form #total").html("Total: " + currency + totalValue.toFixed(2));
    }

    $("form #addAnother").click(function () {
        $.get('/Home/BasketItemRow', function (template) {
            $("#basketList").append(template);
        });
    });
    
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode
        
        if (charCode == 46) {
            // full-stop .
            return true;
        }

        if (charCode > 31 && (charCode < 48 || charCode > 57))
            //numbers / digits
            return false;

        return true;
    }

</script>